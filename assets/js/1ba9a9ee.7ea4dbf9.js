"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[900],{8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>l});var n=i(6540);const t={},a=n.createContext(t);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(a.Provider,{value:s},e.children)}},9771:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api/definitions/settings","title":"Settings","description":"Settings are stored by several values such as applicationId, userId, payerId, customerId, and region. Each setting may contain a key value pair of data that can preserve specific information per application.","source":"@site/docs/api/definitions/settings.md","sourceDirName":"api/definitions","slug":"/api/definitions/settings","permalink":"/sdk-js/api/definitions/settings","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/definitions/settings.md","tags":[],"version":"current","frontMatter":{"title":"Settings"},"sidebar":"someSidebar","previous":{"title":"Regions","permalink":"/sdk-js/api/definitions/regions"},"next":{"title":"Spaces","permalink":"/sdk-js/api/definitions/spaces"}}');var t=i(4848),a=i(8453);const r={title:"Settings"},l=void 0,o={},d=[{value:"GET /api/utils/v1/settings",id:"get-apiutilsv1settings",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example Request",id:"example-request",level:3},{value:"Example Response",id:"example-response",level:3},{value:"PUT /api/utils/v1/settings",id:"put-apiutilsv1settings",level:2},{value:"Example Request",id:"example-request-1",level:3},{value:"Example Response",id:"example-response-1",level:3}];function c(e){const s={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Settings are stored by several values such as applicationId, userId, payerId, customerId, and region. Each setting may contain a key value pair of data that can preserve specific information per application."}),"\n",(0,t.jsx)(s.h2,{id:"get-apiutilsv1settings",children:"GET /api/utils/v1/settings"}),"\n",(0,t.jsx)(s.p,{children:"Query settings by parameters"}),"\n",(0,t.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"applicationId"})," ",(0,t.jsx)(s.em,{children:"(required)"})," \u2014 Find settings associated to a specific application Id."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"payerId"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by payer Id."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"roleId"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by an associated role."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"regionId"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by region."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"customerType"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by the customer type."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"officeId"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by the office Id."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"userSource"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by source system of the user. Used by admins to look at non gateway users."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"userId"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," \u2014 Filter by specific user Id."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"offset"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," - Paging offset. Defaults to ",(0,t.jsx)(s.code,{children:"0"}),". This is the zero-based index of the first item to return."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"limit"})," ",(0,t.jsx)(s.em,{children:"(optional)"})," - Paging limit. Defaults to ",(0,t.jsx)(s.code,{children:"50"}),". The maximum is ",(0,t.jsx)(s.code,{children:"50"}),". This is the maximum number of items to return."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"example-request",children:"Example Request"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"GET https://apps.availity.com/api/utils/v1/settings?applicationId=myApp&userId=myUserAka\n"})}),"\n",(0,t.jsx)(s.h3,{id:"example-response",children:"Example Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "totalCount": 1,\n  "count": 1,\n  "offset": 0,\n  "limit": 1,\n  "links": {\n    "self": {\n      "href": "https://test-apps.availity.com/api/utils/v1/settings?applicationId=myApp&userId=myUserAka"\n    }\n  },\n  "settings": [\n    {\n      "settingKey": "settingValue",\n      "key2": "value2"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"put-apiutilsv1settings",children:"PUT /api/utils/v1/settings"}),"\n",(0,t.jsx)(s.p,{children:"Saves a setting value for the given scope."}),"\n",(0,t.jsx)(s.h3,{id:"example-request-1",children:"Example Request"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'curl -i -X PUT -H "Content-Type: application/json" -d \'{"scope": { "applicationId": "myApp", "userId": "myUserAka"}, "myKey": "myData"}\' "http://localhost:3000/api/utils/v1/settings"\n'})}),"\n",(0,t.jsx)(s.h3,{id:"example-response-1",children:"Example Response"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "myKey": "myData"\n}\n'})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);
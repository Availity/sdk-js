"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[274],{3348:(i,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api/authorizations","title":"Authorization","description":"A package providing a base authorizations class to help check which permissions a user has.","source":"@site/docs/api/authorizations.md","sourceDirName":"api","slug":"/api/authorizations","permalink":"/sdk-js/api/authorizations","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/authorizations.md","tags":[],"version":"current","frontMatter":{"title":"Authorization"},"sidebar":"someSidebar","previous":{"title":"Users","permalink":"/sdk-js/api/definitions/users"},"next":{"title":"Downloads","permalink":"/sdk-js/api/downloads"}}');var o=s(4848),r=s(8453);const a={title:"Authorization"},t=void 0,d={},l=[{value:"Installation",id:"installation",level:2},{value:"NPM",id:"npm",level:3},{value:"Yarn",id:"yarn",level:3},{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>isAuthorized(permissionId, region)</code>",id:"isauthorizedpermissionid-region",level:3},{value:"<code>isAnyAuthorized(permissionIds, region)</code>",id:"isanyauthorizedpermissionids-region",level:3},{value:"<code>getPermission(permissionId, region)</code>",id:"getpermissionpermissionid-region",level:3},{value:"<code>getPermissions(permissionIds, region)</code>",id:"getpermissionspermissionids-region",level:3},{value:"<code>getOrganizations(permissionId, region)</code>",id:"getorganizationspermissionid-region",level:3},{value:"<code>getPayers(permissionId, organizationId, region)</code>",id:"getpayerspermissionid-organizationid-region",level:3}];function c(i){const e={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,r.R)(),...i.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"A package providing a base authorizations class to help check which permissions a user has."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://www.npmjs.com/package/@availity/authorizations-core",children:(0,o.jsx)(e.img,{src:"https://img.shields.io/npm/v/@availity/authorizations-core.svg?style=for-the-badge",alt:"Version"})})}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(e.h3,{id:"npm",children:"NPM"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npm install @availity/authorizations-axios @availity/api-axios\n"})}),"\n",(0,o.jsx)(e.h3,{id:"yarn",children:"Yarn"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"yarn add @availity/authorizations-axios @availity/api-axios\n"})}),"\n",(0,o.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"AvAuthorizations"})," uses ",(0,o.jsx)(e.code,{children:"AvPermissionsApi"})," and ",(0,o.jsx)(e.code,{children:"AvRegionsApi"})," which can be found in ",(0,o.jsx)(e.a,{href:"/api/axios-resources/",children:"@availity/api-axios"}),". You do not need to provide these yourself."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"import AvAuthorizations from '@availity/authorizations-axios';\n\nconst authApi = new AvAuthorizations();\n"})}),"\n",(0,o.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(e.p,{children:"For all methods, if no region is passed in, defaults to current region."}),"\n",(0,o.jsx)(e.h3,{id:"isauthorizedpermissionid-region",children:(0,o.jsx)(e.code,{children:"isAuthorized(permissionId, region)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns true or false if the current user has access to the permission in the given region."}),"\n",(0,o.jsx)(e.h3,{id:"isanyauthorizedpermissionids-region",children:(0,o.jsx)(e.code,{children:"isAnyAuthorized(permissionIds, region)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns true or false if the current user has access to any of the permissions in the given region."}),"\n",(0,o.jsx)(e.h3,{id:"getpermissionpermissionid-region",children:(0,o.jsx)(e.code,{children:"getPermission(permissionId, region)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns the permission object for the given permissionId and region."}),"\n",(0,o.jsx)(e.h3,{id:"getpermissionspermissionids-region",children:(0,o.jsx)(e.code,{children:"getPermissions(permissionIds, region)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns an array of permission objects for the permissionIds in the given region."}),"\n",(0,o.jsx)(e.h3,{id:"getorganizationspermissionid-region",children:(0,o.jsx)(e.code,{children:"getOrganizations(permissionId, region)"})}),"\n",(0,o.jsx)(e.p,{children:"Returns the organizations array for the permissionId. Will be empty if not authorized."}),"\n",(0,o.jsx)(e.h3,{id:"getpayerspermissionid-organizationid-region",children:(0,o.jsx)(e.code,{children:"getPayers(permissionId, organizationId, region)"})}),"\n",(0,o.jsxs)(e.p,{children:["Check the permissionId for an organization with ",(0,o.jsx)(e.code,{children:"organizationId"}),". Returns its ",(0,o.jsx)(e.code,{children:"resources"})," or an empty array."]})]})}function h(i={}){const{wrapper:e}={...(0,r.R)(),...i.components};return e?(0,o.jsx)(e,{...i,children:(0,o.jsx)(c,{...i})}):c(i)}},8453:(i,e,s)=>{s.d(e,{R:()=>a,x:()=>t});var n=s(6540);const o={},r=n.createContext(o);function a(i){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function t(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:a(i.components),n.createElement(r.Provider,{value:e},i.children)}}}]);
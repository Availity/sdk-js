"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[312],{8057:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"api/getting-started","title":"Getting Started","description":"Learn how to use the @availity/api-axios package for communicating with our APIs","source":"@site/docs/api/getting-started.md","sourceDirName":"api","slug":"/api/getting-started","permalink":"/sdk-js/api/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/getting-started.md","tags":[],"version":"current","frontMatter":{"title":"Getting Started"},"sidebar":"someSidebar","previous":{"title":"Error Logging","permalink":"/sdk-js/resources/exceptions"},"next":{"title":"Axios Resources","permalink":"/sdk-js/api/axios-resources"}}');var a=i(4848),t=i(8453);const o={title:"Getting Started"},c=void 0,d={},r=[{value:"Installation",id:"installation",level:2},{value:"NPM",id:"npm",level:3},{value:"Yarn",id:"yarn",level:3},{value:"AvApi",id:"avapi",level:2},{value:"Features",id:"features",level:3},{value:"Usage",id:"usage",level:3},{value:"Options",id:"options",level:3},{value:"<code>http</code>",id:"http",level:4},{value:"<code>config</code>",id:"config",level:4},{value:"Request Config",id:"request-config",level:3},{value:"<code>config.api</code>",id:"configapi",level:5},{value:"<code>config.url</code>",id:"configurl",level:5},{value:"<code>config.path</code>",id:"configpath",level:5},{value:"<code>config.version</code>",id:"configversion",level:5},{value:"<code>config.name</code>",id:"configname",level:5},{value:"<code>config.cacheBust</code>",id:"configcachebust",level:5},{value:"<code>config.pageBust</code>",id:"configpagebust",level:5},{value:"<code>config.sessionBust</code>",id:"configsessionbust",level:5},{value:"<code>config.polling</code>",id:"configpolling",level:5},{value:"<code>config.pollingIntervals</code>",id:"configpollingintervals",level:5},{value:"<code>config.getHeader</code>",id:"configgetheader",level:5},{value:"<code>config.headers</code>",id:"configheaders",level:5},{value:"Methods",id:"methods",level:3},{value:"create or post",id:"create-or-post",level:4},{value:"postGet",id:"postget",level:4},{value:"get",id:"get",level:4},{value:"query",id:"query",level:4},{value:"update or put",id:"update-or-put",level:4},{value:"patch",id:"patch",level:4},{value:"remove or delete",id:"remove-or-delete",level:4},{value:"AvMicroserviceApi",id:"avmicroserviceapi",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Learn how to use the ",(0,a.jsx)(n.a,{href:"https://github.com/Availity/sdk-js/tree/master/packages/api-axios#readme",children:"@availity/api-axios"})," package for communicating with our APIs"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@availity/api-axios",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/npm/v/@availity/api-axios.svg?style=for-the-badge",alt:"Version"})})}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["Install the package through ",(0,a.jsx)(n.code,{children:"npm"}),", ",(0,a.jsx)(n.code,{children:"yarn"}),", or your favorite package manager. You must also install ",(0,a.jsx)(n.code,{children:"axios"})," as well."]}),"\n",(0,a.jsx)(n.h3,{id:"npm",children:"NPM"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @availity/api-axios axios\n"})}),"\n",(0,a.jsx)(n.h3,{id:"yarn",children:"Yarn"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @availity/api-axios axios\n"})}),"\n",(0,a.jsx)(n.h2,{id:"avapi",children:"AvApi"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"AvApi"})," is the default export from ",(0,a.jsx)(n.code,{children:"@availity/api-axios"}),". It is a class that wraps ",(0,a.jsx)(n.a,{href:"https://axios-http.com/docs/intro",children:"axios"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Automatic polling of restful endpoints with timeouts"}),"\n",(0,a.jsx)(n.li,{children:"Simple URI builder for API resources"}),"\n",(0,a.jsx)(n.li,{children:"Life-cycle hooks into HTTP calls for GET, PUT, POST, and DELETE"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n"})}),"\n",(0,a.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,a.jsx)(n.h4,{id:"http",children:(0,a.jsx)(n.code,{children:"http"})}),"\n",(0,a.jsxs)(n.p,{children:["The default http client used is ",(0,a.jsx)(n.code,{children:"axios"}),". You can pass an object to this parameter in order to override ",(0,a.jsx)(n.code,{children:"axios"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"config",children:(0,a.jsx)(n.code,{children:"config"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://axios-http.com/docs/req_config",children:"axios config object"})," that will be passed to each call."]}),"\n",(0,a.jsx)(n.h3,{id:"request-config",children:"Request Config"}),"\n",(0,a.jsxs)(n.p,{children:["Listed below are the options we primarily use from the ",(0,a.jsx)(n.code,{children:"axios config"})," or ones we have added."]}),"\n",(0,a.jsx)(n.h5,{id:"configapi",children:(0,a.jsx)(n.code,{children:"config.api"})}),"\n",(0,a.jsxs)(n.p,{children:["Default ",(0,a.jsx)(n.code,{children:"true"}),". When ",(0,a.jsx)(n.code,{children:"true"}),", the url is built out by joining ",(0,a.jsx)(n.code,{children:"path"}),", ",(0,a.jsx)(n.code,{children:"version"}),", and ",(0,a.jsx)(n.code,{children:"name"})," or just ",(0,a.jsx)(n.code,{children:"url"})," if no name is defined. The ",(0,a.jsx)(n.code,{children:"id"})," is also added when appropriate. When ",(0,a.jsx)(n.code,{children:"api"})," is ",(0,a.jsx)(n.code,{children:"false"}),", all calls just use ",(0,a.jsx)(n.code,{children:"url"}),". URL pattern: ",(0,a.jsx)(n.code,{children:"path/version/name"})]}),"\n",(0,a.jsx)(n.h5,{id:"configurl",children:(0,a.jsx)(n.code,{children:"config.url"})}),"\n",(0,a.jsxs)(n.p,{children:["This is used for requests when ",(0,a.jsx)(n.code,{children:"config.api"})," is false or ",(0,a.jsx)(n.code,{children:"name"})," is undefined;"]}),"\n",(0,a.jsx)(n.h5,{id:"configpath",children:(0,a.jsx)(n.code,{children:"config.path"})}),"\n",(0,a.jsxs)(n.p,{children:["Used for url building when ",(0,a.jsx)(n.code,{children:"config.api"})," is true. URL pattern ",(0,a.jsx)(n.code,{children:"path/version/name"})]}),"\n",(0,a.jsx)(n.h5,{id:"configversion",children:(0,a.jsx)(n.code,{children:"config.version"})}),"\n",(0,a.jsxs)(n.p,{children:["Default ",(0,a.jsx)(n.code,{children:"v1"}),". Used for url building when ",(0,a.jsx)(n.code,{children:"config.api"})," is true. URL pattern ",(0,a.jsx)(n.code,{children:"path/version/name"})]}),"\n",(0,a.jsx)(n.h5,{id:"configname",children:(0,a.jsx)(n.code,{children:"config.name"})}),"\n",(0,a.jsxs)(n.p,{children:["The name of the resource. Used for url building when ",(0,a.jsx)(n.code,{children:"api"})," is true. (",(0,a.jsx)(n.code,{children:"path/version/name"}),")"]}),"\n",(0,a.jsx)(n.h5,{id:"configcachebust",children:(0,a.jsx)(n.code,{children:"config.cacheBust"})}),"\n",(0,a.jsxs)(n.p,{children:["Disable caching for every request by adding a ",(0,a.jsx)(n.code,{children:"cacheBust"})," parameter to the call."]}),"\n",(0,a.jsx)(n.p,{children:"Accepts a boolean, function, or some value:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["If ",(0,a.jsx)(n.code,{children:"true"}),", a timestamp is generated and used"]}),"\n",(0,a.jsx)(n.li,{children:"If a function, it is called and return value is used"}),"\n",(0,a.jsx)(n.li,{children:"If a value is passed then the cache bust param is set to this value."}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"configpagebust",children:(0,a.jsx)(n.code,{children:"config.pageBust"})}),"\n",(0,a.jsxs)(n.p,{children:["Bust the browser cache on page load, and keep its value for lifecycle of the page. Same behavior as ",(0,a.jsx)(n.code,{children:"cacheBust"})," except if true, a value is only generated once and re-used. A hard refresh of page resets the ",(0,a.jsx)(n.code,{children:"pageBust"})," value. To manually set the ",(0,a.jsx)(n.code,{children:"pageBust"})," value call without changing the config, use ",(0,a.jsx)(n.code,{children:"setPageBust(value)"})," which will set the it to ",(0,a.jsx)(n.code,{children:"value"})," or if undefined generate a timestamp."]}),"\n",(0,a.jsx)(n.h5,{id:"configsessionbust",children:(0,a.jsx)(n.code,{children:"config.sessionBust"})}),"\n",(0,a.jsxs)(n.p,{children:["Default ",(0,a.jsx)(n.code,{children:"true"}),". Attempts to read a value in local storage that is generated at login. This forces the browser to bust the cache when a new session has started. If the local storage value is not found, uses the ",(0,a.jsx)(n.code,{children:"pageBust"})," value."]}),"\n",(0,a.jsx)(n.h5,{id:"configpolling",children:(0,a.jsx)(n.code,{children:"config.polling"})}),"\n",(0,a.jsxs)(n.p,{children:["Default ",(0,a.jsx)(n.code,{children:"true"}),". If true and rest services return ",(0,a.jsx)(n.code,{children:"202"})," statuc code, ",(0,a.jsx)(n.code,{children:"AvApi"})," will attempt to poll on predefined internvals until the retries are exhausted or the api returns non ",(0,a.jsx)(n.code,{children:"202"})," response."]}),"\n",(0,a.jsx)(n.h5,{id:"configpollingintervals",children:(0,a.jsx)(n.code,{children:"config.pollingIntervals"})}),"\n",(0,a.jsxs)(n.p,{children:["An array of intervals (ms) to wait before making another request.\nDefault is 1, 2, 5, then 10 seconds. After all the intervals have been used, ",(0,a.jsx)(n.code,{children:"AvApi"})," will stop attempting requests and return the last response."]}),"\n",(0,a.jsx)(n.h5,{id:"configgetheader",children:(0,a.jsx)(n.code,{children:"config.getHeader"})}),"\n",(0,a.jsxs)(n.p,{children:["Used for polling, if the ",(0,a.jsx)(n.code,{children:"http"})," service used has special logic to get a header value, then define this function to handle that logic. If defined, it is called with ",(0,a.jsx)(n.code,{children:"(response, headerKey)"}),".\nIf not defined, attempts to get ",(0,a.jsx)(n.code,{children:"key"})," from ",(0,a.jsx)(n.code,{children:"response.headers[key]"}),"."]}),"\n",(0,a.jsx)(n.h5,{id:"configheaders",children:(0,a.jsx)(n.code,{children:"config.headers"})}),"\n",(0,a.jsx)(n.p,{children:"Headers to be passed to the request."}),"\n",(0,a.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,a.jsxs)(n.p,{children:["Each method can use an after function, (ex. ",(0,a.jsx)(n.code,{children:"afterGet"})," with ",(0,a.jsx)(n.code,{children:"get"}),"). These are available to modify the response before it is resolved. Each method that has data available has a before function in order to modify data before the call is made."]}),"\n",(0,a.jsx)(n.p,{children:"All methods accept a config object, which is merged into the resources config for that call only."}),"\n",(0,a.jsx)(n.h4,{id:"create-or-post",children:"create or post"}),"\n",(0,a.jsxs)(n.p,{children:["Makes ",(0,a.jsx)(n.code,{children:"HTTP POST"})," request."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst post = async (data, config) => {\n  const response = await api.post(data, config);\n  return response.data;\n};\n\n// OR\nconst create = async (data, config) => {\n  const response = await api.create(data, config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"postget",children:"postGet"}),"\n",(0,a.jsxs)(n.p,{children:["Makes ",(0,a.jsx)(n.code,{children:"HTTP POST"})," using ",(0,a.jsx)(n.code,{children:"X-HTTP-Method-Override = 'GET'"}),". There server must support override methods for the request to succeed."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst postGet = async (data, config) => {\n  const response = await api.postGet(data, config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"get",children:"get"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an entity by ID. Makes ",(0,a.jsx)(n.code,{children:"HTTP GET"})," call with ",(0,a.jsx)(n.code,{children:"/id"})," in url."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst get = async (id, config) => {\n  const response = await api.get(id, config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"query",children:"query"}),"\n",(0,a.jsxs)(n.p,{children:["The query function is designed to fetch collections and search the API. Makes ",(0,a.jsx)(n.code,{children:"HTTP GET"})," request with query params."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst query = async (config) => {\n  const response = await api.query(config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"update-or-put",children:"update or put"}),"\n",(0,a.jsxs)(n.p,{children:["Update an entity with a PUT call. When an id is passed in, ",(0,a.jsx)(n.code,{children:"/id"})," is added to the url."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst put = async (id, data, config) => {\n  const response = await api.put(id, data, config);\n  return response.data;\n};\n\n// OR\n\nconst update = async (data, config) => {\n  // You can also omit the id. this works for `put` as well\n  const response = await api.update(data, config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"patch",children:"patch"}),"\n",(0,a.jsxs)(n.p,{children:["Update an entity with a PATCH call. When an id is passed in, ",(0,a.jsx)(n.code,{children:"/id"})," is added to the url."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst patch = async (id, data, config) => {\n  const response = await api.patch(id, data, config);\n  // You can also omit id, and only pass in data and config\n  // const response = await api.patch(data, config);\n  return response.data;\n};\n"})}),"\n",(0,a.jsx)(n.h4,{id:"remove-or-delete",children:"remove or delete"}),"\n",(0,a.jsxs)(n.p,{children:["Remove an entity with a DELETE call. When an id is passed in, ",(0,a.jsx)(n.code,{children:"/id"})," is added to the url. If the first parameter is a string or number, it is treated as an ID, otherwise data."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import AvApi from '@availity/api-axios';\n\nconst api = new AvApi({ name: 'test' });\n\nconst remove = async (id, config) => {\n  const response = await api.remove(id, config);\n  return response.data;\n};\n\n// OR\n\nconst delete = async (data, config) => {\n  const response = await api.delete(data, config);\n  return response.data;\n};\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"avmicroserviceapi",children:"AvMicroserviceApi"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"AvMicroservice"})," extends ",(0,a.jsx)(n.code,{children:"AvApi"})," and thus can call the same methods. It has slightly different default ",(0,a.jsx)(n.a,{href:"https://github.com/Availity/sdk-js/blob/master/packages/api-axios/src/options.js",children:"config options"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const a={},t=s.createContext(a);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
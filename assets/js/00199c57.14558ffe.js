"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[725],{226:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/definitions/telemetry","title":"Telemetry","description":"Endpoint to send telemetry data by level and key/value pairs.","source":"@site/docs/api/definitions/telemetry.md","sourceDirName":"api/definitions","slug":"/api/definitions/telemetry","permalink":"/sdk-js/api/definitions/telemetry","draft":false,"unlisted":false,"editUrl":"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/definitions/telemetry.md","tags":[],"version":"current","frontMatter":{"title":"Telemetry"},"sidebar":"someSidebar","previous":{"title":"Spaces","permalink":"/sdk-js/api/definitions/spaces"},"next":{"title":"User Permissions","permalink":"/sdk-js/api/definitions/user-permissions"}}');var n=i(4848),r=i(8453);const l={title:"Telemetry"},o=void 0,d={},a=[{value:"POST /ms/api/availity/internal/pui/key-delivery/v1/telemetry",id:"post-msapiavailityinternalpuikey-deliveryv1telemetry",level:2},{value:"Body",id:"body",level:3},{value:"Example Request",id:"example-request",level:3},{value:"Response Code",id:"response-code",level:3}];function c(e){const t={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Endpoint to send telemetry data by level and key/value pairs."}),"\n",(0,n.jsx)(t.h2,{id:"post-msapiavailityinternalpuikey-deliveryv1telemetry",children:"POST /ms/api/availity/internal/pui/key-delivery/v1/telemetry"}),"\n",(0,n.jsx)(t.h3,{id:"body",children:"Body"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"customerId"})," (",(0,n.jsx)(t.em,{children:"required"}),") The Availity Customer ID"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"contact"})," (",(0,n.jsx)(t.em,{children:"required"}),") The associated email address for the telemetry message"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"owner"})," (",(0,n.jsx)(t.em,{children:"required"}),") The owner of the data. Used for determining cost"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"source_system"})," (",(0,n.jsx)(t.em,{children:"required"}),") The ID of the application the telemetry message is coming from"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"version"})," (",(0,n.jsx)(t.em,{children:"required"}),") The version of the Telemetry API the telemetry message should be validated against"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"payerId"})," The selected payer in the workflow if there is one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"sessionId"})," An alphanumeric ID used to link events from the same session together"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.level"})," (",(0,n.jsx)(t.em,{children:"required"}),') The log level for the telemetry message. Typically one of: ["info", "debug", "warn", "error"]']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.entries"}),' The key value pairs that should be stored for the telemetry message. entries can be for "known keys" or "unknown keys". Known keys are defined below:']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.entries.action"})," (",(0,n.jsx)(t.em,{children:"required"}),') The action taken by the user to trigger the telemetry message to be sent. Typically one of ["click", "hover", "blur", "focus"]']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.entries.label"})," (",(0,n.jsx)(t.em,{children:"required"}),") The text of the element the user interacts with that triggers the telemetry message."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.entries.event"})," (",(0,n.jsx)(t.em,{children:"required"}),") The event that occurs when the ",(0,n.jsx)(t.code,{children:"action"}),' is taken by the user to trigger the telementry message to be sent. Examples include ["submit", "reset", "redirect", "api"]']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"telemetryBody.entries.category"})," (",(0,n.jsx)(t.em,{children:"required"}),") The section of the UI the telemetry message was submitted on"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"example-request",children:"Example Request"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -i -X POST -H "Content-Type: application/json" -d \'{\n    "customerId": "1194",\n    "contact": "myteamdistributionlist@availity.com",\n    "owner": "YourTeam",\n    "source_system": "eligibility_and_benefits",\n    "version": "1",\n    "payerId": "A123",\n    "sessionId": "123-456-789",\n    "telemetryBody": {\n        "level": "info",\n        "entries": {\n            "event": "submit",\n            "action": "click",\n            "label": "Submit",\n            "category": "form",\n            "elementId": "abc123",\n            "userId": "aka123"\n        }\n    }\n}}\' \'https://apps.availity.com/ms/api/availity/internal/pui/key-delivery/v1/telemetry\'\n'})}),"\n",(0,n.jsx)(t.h3,{id:"response-code",children:"Response Code"}),"\n",(0,n.jsx)(t.p,{children:"A 201 created status code indicates a successful log. No response value is returned."})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>o});var s=i(6540);const n={},r=s.createContext(n);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);